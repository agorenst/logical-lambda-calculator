(define cond (lambda e1 (lambda e2 (lambda c ((c e1) e2)))))
(define true (lambda x (lambda y x)))
(define false (lambda x (lambda y y)))
(define and (lambda x (lambda y ((x y) false))))
(define not (lambda x ((x false) true)))
(define nand (lambda x (lambda y (not ((and x) y)))))
(print)
(execute ((nand true) true))
(execute ((nand true) false))
(execute ((nand false) true))
(execute ((nand false) false))
(halt)
