(define true (lambda x (lambda y x)))
(define false (lambda x (lambda y y)))
(define not (lambda y ((y false) true)))
(define nand (lambda x (lambda y ((x ((y false) true)) true))))
(define not (lambda x ((nand x) x)))
(define and (lambda x (lambda y (not ((nand x) y)))))
(define or (lambda x (lambda y ((nand (not x)) (not y)))))
(define implies (lambda x (lambda y ((or (not x)) y))))
(execute ((nand true) true))
(execute ((nand true) false))
(execute ((nand false) true))
(execute ((nand false) false))
(execute (not true))
(execute (not false))
(execute ((and true) true))
(execute ((and true) false))
(execute ((and false) true))
(execute ((and false) false))
(execute ((or true) true))
(execute ((or true) false))
(execute ((or false) true))
(execute ((or false) false))
(execute ((implies true) true))
(execute ((implies true) false))
(execute ((implies false) true))
(execute ((implies false) false))
